{"version":3,"sources":["components/header/Header.module.css","layout/AppLayout.module.css","container/AddProduct/AddProduct.module.css","context/AppContext.js","routes/routeRules.js","hooks/usePikachu.js","container/productList/ProductTable.jsx","container/productList/index.jsx","components/breadcrum/index.jsx","container/AddProduct/ProductSpecification.jsx","container/AddProduct/StockInformation.jsx","container/AddProduct/ProductPrice.jsx","components/UploadMultipleImage/index.jsx","container/AddProduct/ProductGenral.jsx","routes/routesData.js","container/AddProduct/index.jsx","components/header/index.jsx","components/leftMenu/index.jsx","layout/AppLayout.js","layoutRoute/AppRoute.js","layout/DefaultLayout.js","layoutRoute/DefaultRoute.js","App.js","serviceWorker.js","index.js","container/productList/ProductList.module.css","components/leftMenu/LeftMenu.module.css"],"names":["module","exports","AppContext","React","createContext","AppProvider","props","useState","isLeftMenuVissible","token","productList","state","setState","Provider","value","children","routeRules","usePikachu","useContext","toggleLeftMenu","prevState","addProductList","product","ProductTable","selectedRowKeys","setSelectedRowKeys","rowSelection","onChange","setSelectedRow","dataSource","columns","title","dataIndex","key","render","images","src","response","url","alt","width","height","enableProduct","placeholder","Option","className","styles","productTable","ProductList","handleSelectAction","selectedAction","console","log","productListWrapper","header","Search","onSearch","style","type","onClick","history","push","inventoryHeader","inventoryHeaderRight","SettingOutlined","length","selectedKeys","BreadcrumbCustom","separator","Item","to","ProductSpecification","Select","List","name","fields","add","remove","map","field","fieldKey","rules","required","message","DeleteOutlined","block","StockInformation","form","label","suffixIcon","DownOutlined","UserOutlined","ProductPrice","labelOnBorder","htmlFor","UploadMultipleImage","props1","description","Dragger","Upload","imageList","setImageList","multiple","action","disabled","info","status","file","success","fileList","error","CloudUploadOutlined","ProductGenral","maxLength","format","TextArea","uploadImage","routesData","path","component","setImages","Panel","Collapse","Form","useForm","useEffect","setFieldsValue","quantityInStock","addProductWrapper","onFinish","FormValue","shortid","generate","collapse","bordered","defaultActiveKey","panel","img","htmlType","auth","exact","Header","hemburger","MenuOutlined","withRouter","Style","leftMenu","openMenu","CloseMenu","menuItemHead","menuItemIcon","CreditCardOutlined","subMenu","AppLayout","isMenuOpen","appLayout","pageBackground","AppRoute","Component","rest","matchProps","localStorage","getItem","pathname","from","location","DefaultLayout","DefaultRoute","App","route","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0bc6ecb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1MOL-\",\"hemburger\":\"Header_hemburger__2xX3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appLayout\":\"AppLayout_appLayout__3qinM\",\"pageBackground\":\"AppLayout_pageBackground__2e_Ls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addProductWrapper\":\"AddProduct_addProductWrapper__3pZed\",\"header\":\"AddProduct_header__2VkFM\",\"collapse\":\"AddProduct_collapse__24fpP\",\"panel\":\"AddProduct_panel__34xry\",\"ant-select\":\"AddProduct_ant-select__3BgSd\",\"uploadImage\":\"AddProduct_uploadImage__1bx2w\",\"labelOnBorder\":\"AddProduct_labelOnBorder__2L7iU\",\"ant-form-item-control-input-content\":\"AddProduct_ant-form-item-control-input-content__XF111\",\"ant-select-selector\":\"AddProduct_ant-select-selector__taO4z\"};","import React from 'react';\n\nexport const AppContext = React.createContext();\n\nexport const AppProvider = (props) => {\n    const initialSate = {\n        isLeftMenuVissible: true,\n\n        token: \"\",\n\n        productList: [{\"enableProduct\":true,\"productName\":\"Hand warmer\",\"modelNo\":\"123456\",\"category\":\"category1\",\"manufacturerDate\":\"2020-05-31T23:22:14.996Z\",\"manufacturer\":\"manufacturer1\",\"sku\":\"qwerty\",\"attributeSet\":\"attributeSet3\",\"productStartDate\":\"2020-06-20T23:22:25.055Z\",\"productEndDate\":\"2020-07-28T23:22:28.378Z\",\"description\":\"fb ddjgks\",\"warrentyType\":\"2\",\"productSpecification\":[{\"measurementValue\":\"123\",\"type\":\"sqFeet\",\"value\":\"456\"}],\"productCost\":\"45\",\"spManufacturer\":\"45\",\"spResidential\":\"Delhi\",\"spCommercial\":\"Delhi\",\"usageUnit\":\"usageUnit2\",\"qtyOrdered\":\"456\",\"quantityInStock\":\"758\",\"reorderLevel\":\"hell\",\"handler\":\"handler2\",\"quantityInDemand\":\"500\",\"id\":\"LHmfM_77E\",\"images\":[{\"uid\":\"rc-upload-1591140086352-3\",\"lastModified\":1590091591683,\"lastModifiedDate\":\"2020-05-21T20:06:31.683Z\",\"name\":\"Shree Hanumanji Jhajar.pdf\",\"size\":53003,\"type\":\"application/pdf\",\"percent\":100,\"originFileObj\":{\"uid\":\"rc-upload-1591140086352-3\"},\"status\":\"done\",\"response\":{\"name\":\"xxx.png\",\"status\":\"done\",\"url\":\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\",\"thumbUrl\":\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"},\"xhr\":{}}]}],\n\n    };\n\n    const [state, setState] = React.useState(initialSate);\n\n    return (\n        <AppContext.Provider value={[state, setState]}>\n            {props.children}\n        </AppContext.Provider>\n    )\n};\n\n","export const routeRules = {\n    landing: \"/\",\n\n    login: \"/login-in\",\n\n    users: \"/users\",\n\n    addProduct: '/add-product',\n\n    productList: '/product-list'\n\n};","import React from \"react\";\nimport {AppContext} from \"../context/AppContext\";\n\nconst usePikachu = () => {\n\n    const [state, setState] = React.useContext(AppContext);\n\n    function toggleLeftMenu() {\n        setState(prevState => {\n            return {\n                ...prevState,\n                isLeftMenuVissible: !prevState.isLeftMenuVissible\n            }\n        })\n    }\n\n\n    function addProductList(product) {\n        setState(prevState => {\n            return {\n                ...prevState,\n                productList: [...prevState.productList, product]\n            }\n        })\n    }\n\n    return {\n        toggleLeftMenu,\n\n        isLeftMenuVissible: state.isLeftMenuVissible,\n\n        productList: state.productList,\n\n        addProductList,\n    }\n};\n\nexport default usePikachu;","import React, {useState} from 'react';\nimport {Select, Table} from \"antd\";\nimport styles from './ProductList.module.css';\nimport usePikachu from \"../../hooks/usePikachu\";\n\nconst ProductTable = (props) => {\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n    const {productList} = usePikachu()\n    const onSelectChange = selectedRowKeys => {\n        setSelectedRowKeys(selectedRowKeys)\n        props.setSelectedRow(selectedRowKeys)\n    };\n\n    const rowSelection = {\n        selectedRowKeys,\n        onChange: onSelectChange,\n    };\n\n    const dataSource = productList;\n\n    const columns = [\n        {\n            title: 'Product ID',\n            dataIndex: 'id',\n            key: 'id',\n        },\n        {\n            title: 'Thumbnails',\n            dataIndex: 'images',\n            key: 'images',\n            render: (images) => (\n                <>\n                    <img\n                        src={images[0].response.url}\n                        alt=\"img\"\n                        width=\"25\"\n                        height=\"25\"\n                    />\n                </>\n            )\n        },\n        {\n            title: 'Product Name',\n            dataIndex: 'productName',\n            key: 'productName',\n        },\n        {\n            title: 'Category',\n            dataIndex: 'category',\n            key: 'category',\n        },\n        {\n            title: 'SKU',\n            dataIndex: 'sku',\n            key: 'sku',\n        },\n        {\n            title: 'Manufacturer',\n            dataIndex: 'manufacturer',\n            key: 'manufacturer',\n        },\n        {\n            title: 'In Stock',\n            dataIndex: 'quantityInStock',\n            key: 'quantityInStock',\n        },\n        {\n            title: 'Qty',\n            dataIndex: 'quantityInStock',\n            key: 'quantityInStock',\n        },\n        {\n            title: 'Model No',\n            dataIndex: 'modelNo',\n            key: 'modelNo',\n        },\n        {\n            title: 'Promotion',\n            dataIndex: 'address',\n            key: 'address',\n            render: () => (\n                <span>New</span>\n            )\n        },\n        {\n            title: 'Status',\n            dataIndex: 'enableProduct',\n            key: 'enableProduct',\n            render: (enableProduct) => (\n                <>\n                    <span>\n                        {enableProduct ? 'Yes' : 'No'}\n                    </span>\n                </>\n            )\n        },\n        {\n            title: 'Action',\n            dataIndex: 'Action',\n            key: 'Action',\n            render: () => (\n                <>\n                    <Select placeholder=\"Action\">\n                        <Select.Option value=\"delete\">Delete</Select.Option>\n                        <Select.Option value=\"edit\">Edit</Select.Option>\n                    </Select>\n                </>\n            )\n        },\n    ];\n\n\n    return (\n        <div className={styles.productTable}>\n            <Table rowSelection={rowSelection} dataSource={dataSource} columns={columns} />\n        </div>\n    );\n};\n\nexport default ProductTable;","import React, {useState} from 'react';\nimport styles from \"./ProductList.module.css\";\nimport { Select, Table, Button, Input } from 'antd';\nimport ProductTable from \"./ProductTable\";\nimport { SettingOutlined } from '@ant-design/icons';\nimport {routeRules} from \"../../routes/routeRules\";\n\nconst ProductList = (props) => {\n    const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n\n    const setSelectedRow = (selectedKeys) => {\n        setSelectedRowKeys(selectedKeys)\n    }\n\n    const handleSelectAction = (selectedAction) => {\n        console.log(\"selectedAction ==>\", selectedAction);\n    }\n\n    return (\n        <div className={styles.productListWrapper}>\n            <div className=\"d-flex justify-content-between mb-2\">\n                <div className={styles.header}>\n                    Manage Inventory\n                </div>\n                <div>\n\n                    <Input.Search\n                        className=\"mr-3\"\n                        placeholder=\"input search text\"\n                        onSearch={value => console.log(value)}\n                        style={{ width: 200 }}\n                    />\n                    <Button type=\"primary\" onClick={() => props.history.push(routeRules.addProduct)}>Add Product</Button>\n                </div>\n            </div>\n\n            <div className={styles.inventoryHeader}>\n                <div className=\"m-3\">\n                    Inventory List\n                </div>\n                <div className={styles.inventoryHeaderRight}>\n                    <div className=\"mr-1\">\n                        <SettingOutlined />\n                    </div>\n                    <div className=\"mr-2 mt-1\">\n                        Columns\n                    </div>\n                    <div className=\"mr-2 mt-1\">\n                        Product Status:\n                    </div>\n                    <Select\n                        placeholder=\"Select\"\n                        className=\"\"\n                        style={{width: '200px'}}\n                        onChange={handleSelectAction}\n                    >\n                        <Select.Option value=\"delete\">delete</Select.Option>\n                    </Select>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-between mb-4\">\n                <div/>\n                <div>\n                    <span className=\"mr-3\">\n                        {selectedRowKeys.length} Item Selected\n                    </span>\n                    <Select\n                        placeholder=\"Action\"\n                        style={{width: '120px'}}\n                        onChange={handleSelectAction}\n                    >\n                        <Select.Option value=\"delete\">delete</Select.Option>\n                    </Select>\n\n                </div>\n            </div>\n\n            <ProductTable setSelectedRow={setSelectedRow}/>\n        </div>\n    );\n};\n\nexport default ProductList;","import React from 'react';\nimport {Breadcrumb} from \"antd\";\nimport {routeRules} from \"../../routes/routeRules\";\nimport {Link} from \"react-router-dom\";\n\nconst BreadcrumbCustom = () => {\n    return (\n        <Breadcrumb separator=\">\">\n            <Breadcrumb.Item>Manage Inventory</Breadcrumb.Item>\n            <Breadcrumb.Item> <Link to={routeRules.productList}>Manage Product</Link></Breadcrumb.Item>\n            <Breadcrumb.Item>Add Product</Breadcrumb.Item>\n        </Breadcrumb>\n    );\n};\n\nexport default BreadcrumbCustom;","import React from 'react';\nimport {Button, Form, Input, Select, Space} from \"antd\";\nimport { DeleteOutlined, PlusOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nconst ProductSpecification = () => {\n    const { Option } = Select;\n\n    return (\n        <div>\n            <div className=\"row mb-2\">\n                <div className=\"col-3\">\n                    Measurement Variable\n                </div>\n                <div className=\"col-3\">\n                    Type\n                </div>\n                <div className=\"col-3\">\n                    Value\n                </div>\n                <div className=\"col-3\">\n                    Action\n                </div>\n            </div>\n\n            <>\n                <Form.List name=\"productSpecification\" >\n                    {(fields, { add, remove }) => {\n                        return (\n                            <div>\n                                {fields.map(field => (\n                                    <div className=\"row\" key={field.key}>\n                                        <div className=\"col-3\">\n                                            <Form.Item\n                                                {...field}\n                                                name={[field.name, 'measurementValue']}\n                                                fieldKey={[field.fieldKey, 'measurementValue']}\n                                                rules={[{required: true, message: 'Please input Measurement Value!'}]}\n                                            >\n                                                <Input placeholder=\"Measurement Value\" />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"col-3\">\n                                            <Form.Item\n                                                {...field}\n                                                name={[field.name, 'type']}\n                                                fieldKey={[field.fieldKey, 'type']}\n                                                rules={[{required: true, message: 'Please select type!'}]}\n                                            >\n                                                <Select placeholder=\"Type\"\n                                                        style={{ width: '100%' }}>\n                                                    <Option value=\"sqFeet\">Sq Feet</Option>\n                                                    <Option value=\"pounds\">Pounds</Option>\n                                                    <Option value=\"color\">color</Option>\n                                                </Select>\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"col-3\">\n                                            <Form.Item\n                                                {...field}\n                                                name={[field.name, 'value']}\n                                                fieldKey={[field.fieldKey, 'value']}\n                                                rules={[{required: true, message: 'Please input Value!'}]}\n                                            >\n                                                <Input placeholder=\"Value\" />\n                                            </Form.Item>\n                                        </div>\n                                        <div className=\"col-3\">\n                                            <DeleteOutlined\n                                                onClick={() => {\n                                                    remove(field.name);\n                                                }}\n                                            />\n                                        </div>\n                                    </div>\n                                ))}\n\n                                <Form.Item>\n                                    <Button\n                                        type=\"dashed\"\n                                        onClick={() =>add()}\n                                        block\n                                    >\n                                        Add Specification\n                                    </Button>\n                                </Form.Item>\n                            </div>\n                        );\n                    }}\n                </Form.List>\n            </>\n        </div>\n    );\n};\n\nexport default ProductSpecification;","import React from 'react';\nimport {Form, Input, Select} from \"antd\";\nimport { DownOutlined, UserOutlined } from '@ant-design/icons';\n\n\nconst StockInformation = ({form}) => {\n    const {Option } = Select;\n\n    const handlerIcons = () => {\n        return (\n            <span className=\"d-flex mr-2\">\n                <span>\n                    <DownOutlined />\n                </span> &nbsp;\n                <span>\n                    <UserOutlined />\n                </span>\n            </span>\n        )\n    }\n\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-4\">\n                <Form.Item\n                    label=\"\"\n                    name=\"usageUnit\"\n                    rules={[{required: true, message: 'Please select usage Unit!'}]}\n                >\n                    <Select placeholder=\"usage Unit\">\n                        <Option value=\"usageUnit1\">usage Unit1</Option>\n                        <Option value=\"usageUnit2\">usage Unit2</Option>\n                        <Option value=\"usageUnit3\">usage Unit3</Option>\n                        <Option value=\"usageUnit4\">usage Unit4</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    label=\"\"\n                    name=\"qtyOrdered\"\n                    rules={[{required: true,message: 'Please input Qty Ordered!'}]}\n                >\n                    <Input placeholder=\"Qty Ordered\" type=\"number\" />\n                </Form.Item>\n            </div>\n            <div className=\"col-4\">\n                <Form.Item\n                    label=\"\"\n                    name=\"quantityInStock\"\n                    rules={[{required: true,message: 'Please input Quantity In Stock!'}]}\n                >\n                    <Input placeholder=\"Quantity in stock\" type=\"number\" />\n                </Form.Item>\n                <Form.Item\n                    label=\"\"\n                    name=\"reorderLevel\"\n                    rules={[{required: true, message: 'Please input Reorder Level!'}]}\n                >\n                    <Input placeholder=\"Reorder Level\" />\n                </Form.Item>\n            </div>\n            <div className=\"col-4\">\n                <Form.Item\n                    label=\"\"\n                    name=\"handler\"\n                    rules={[{required: true, message: 'Please select Handler!'}]}\n                >\n                    <Select\n                        placeholder=\"Handler\"\n                        suffixIcon={handlerIcons}>\n                        <Option value=\"handler1\">Handler 1</Option>\n                        <Option value=\"handler2\">Handler 2</Option>\n                        <Option value=\"handler3\">Handler 3</Option>\n                        <Option value=\"handler4\">Handler 4</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    label=\"\"\n                    name=\"quantityInDemand\"\n                    rules={[{required: true, message: 'Please input Quantity in Demand!'}]}\n                >\n                    <Input placeholder=\"Quantity in Demand\" type=\"number\" />\n                </Form.Item>\n            </div>\n        </div>\n    );\n};\n\nexport default StockInformation;","import React from 'react';\nimport {Form, Input} from \"antd\";\nimport styles from \"./AddProduct.module.css\";\n\nconst ProductPrice = () => {\n    return (\n        <>\n            <div className=\"row\">\n                <div className={`col-4 ${styles.labelOnBorder}`}>\n                    <label htmlFor=\"\">Product Cost ($)</label>\n                    <Form.Item\n                        label=\"\"\n                        name=\"productCost\"\n                        rules={[{required: true, message: 'Please input Product Cost!'}]}\n                    >\n                        <Input placeholder=\"Product Cost\" type=\"number\" />\n                    </Form.Item>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <label htmlFor=\"\">Selling Price ($)</label>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <Form.Item\n                        label=\"\"\n                        name=\"spManufacturer\"\n                        rules={[{required: true, message: 'Please input Selling Price!'}]}\n                    >\n                        <Input placeholder=\"Selling Price ($)\" type=\"number\" />\n                    </Form.Item>\n                </div>\n                <div className=\"col-4\">\n                    <Form.Item\n                        label=\"\"\n                        name=\"spResidential\"\n                        rules={[{required: true, message: 'Please input Residential!'}]}\n                    >\n                        <Input placeholder=\"Residential\"/>\n                    </Form.Item>\n                </div>\n                <div className=\"col-4\">\n                    <Form.Item\n                        label=\"\"\n                        name=\"spCommercial\"\n                        rules={[{required: true, message: 'Please input Commercial!'}]}\n                    >\n                        <Input placeholder=\"Commercial\"/>\n                    </Form.Item>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ProductPrice;","import React, {useState} from 'react';\nimport {  Upload, message  } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n\nconst UploadMultipleImage = (props1) => {\n\n    const {description} = props1;\n    const { Dragger } = Upload;\n\n    const [imageList, setImageList] = useState([])\n\n    const props = {\n        name: 'file',\n        multiple: true,\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        disabled: !(imageList.length < 5),\n        onChange(info) {\n            const { status } = info.file;\n            if (status !== 'uploading') {\n            }\n            if (status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully.`);\n                setImageList(info.fileList)\n                props1.setImageList(info.fileList)\n            } else if (status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n    };\n\n    return (\n        <div>\n            <div className=\"mb-2\">\n                <span>{description}</span>\n            </div>\n            <Dragger {...props}>\n                <p className=\"ant-upload-drag-icon\">\n                    <CloudUploadOutlined />\n                </p>\n                <p className=\"ant-upload-text\">Drag and Drop or Browse your file</p>\n            </Dragger>\n        </div>\n    );\n};\n\nexport default UploadMultipleImage;","import React from 'react';\nimport {Form, Input, Select, Switch, DatePicker, Checkbox} from \"antd\";\nimport styles from './AddProduct.module.css';\nimport UploadMultipleImage from \"../../components/UploadMultipleImage\";\nconst ProductGenral = ({form, setImageList}) => {\n    return (\n        <div>\n            <Form.Item\n                label=\"Enable Product\"\n                name=\"enableProduct\"\n                rules={[{required: false, message: 'Please input Commercial!'}]}\n            >\n                <Switch/>\n            </Form.Item>\n\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <div className={styles.labelOnBorder}>\n                        <label htmlFor=\"\">Product Name*</label>\n                        <Form.Item\n                            label=\"\"\n                            name=\"productName\"\n                            rules={[{required: true, message: 'Please input Product Name!'}]}\n                        >\n                            <Input placeholder=\"Product Name\"/>\n                        </Form.Item>\n                    </div>\n                    <Form.Item\n                        label=\"\"\n                        name=\"modelNo\"\n                        rules={[{required: true, message: 'Please input Model Number!'}]}\n                    >\n                        <Input\n                            placeholder=\"model Number\"\n                            maxLength={10}\n                        />\n                    </Form.Item>\n                </div>\n                <div className=\"col-4\">\n                    <Form.Item\n                        label=\"\"\n                        name=\"category\"\n                        rules={[{required: true, message: 'Please select Category!'}]}\n                    >\n                        <Select placeholder=\"category\">\n                            <Select.Option value=\"category1\">category1</Select.Option>\n                            <Select.Option value=\"category2\">category2</Select.Option>\n                            <Select.Option value=\"category3\">category3</Select.Option>\n                            <Select.Option value=\"category4\">category4</Select.Option>\n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"\"\n                        name=\"manufacturerDate\"\n                        rules={[{required: true, message: 'Please select Manufacturer Date!'}]}\n                    >\n                        <DatePicker\n                            format=\"YYYY-MM-DD\"\n                            placeholder=\"Manufacturer Date\"\n                        />\n                    </Form.Item>\n                </div>\n                <div className=\"col-4\">\n                    <Form.Item\n                        label=\"\"\n                        name=\"manufacturer\"\n                        rules={[{required: true, message: 'Please select Manufacturer!'}]}\n                    >\n                        <Select placeholder=\"Manufacturer\">\n                            <Select.Option value=\"manufacturer1\">manufacturer1</Select.Option>\n                            <Select.Option value=\"manufacturer2\">manufacturer2</Select.Option>\n                            <Select.Option value=\"manufacturer3\">manufacturer3</Select.Option>\n                            <Select.Option value=\"manufacturer4\">manufacturer4</Select.Option>\n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"\"\n                        name=\"sku\"\n                        rules={[{required: true, message: 'Please input SKU!'}]}\n                    >\n                        <Input placeholder=\"SKU*\"/>\n                    </Form.Item>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <Form.Item\n                        label=\"\"\n                        name=\"attributeSet\"\n                        rules={[{required: true, message: 'Please select Attribute Set!'}]}\n                    >\n                        <Select placeholder=\"Attribute Set\"\n                                style={{ width: '100%' }}>\n                            <Select.Option value=\"attributeSet1\">attributeSet1</Select.Option>\n                            <Select.Option value=\"attributeSet2\">attributeSet2</Select.Option>\n                            <Select.Option value=\"attributeSet3\">attributeSet3</Select.Option>\n                            <Select.Option value=\"attributeSet4\">attributeSet4</Select.Option>\n                        </Select>\n                    </Form.Item>\n                    <label htmlFor=\"\">Set Product As New Form</label>\n                    <div className=\"d-flex\">\n                        <Form.Item\n                            label=\"\"\n                            name=\"productStartDate\"\n                            rules={[{required: true, message: 'Please input start Date!'}]}\n                        >\n                            <DatePicker\n                                format=\"YYYY-MM-DD\"\n                                placeholder=\"Start Date\"\n                            />\n                        </Form.Item>\n                        <span className=\"ml-2 mr-2\">To</span>\n                        <Form.Item\n                            label=\"\"\n                            name=\"productEndDate\"\n                            rules={[{required: true, message: 'Please input End Date!'}]}\n                        >\n                            <DatePicker\n                                format=\"YYYY-MM-DD\"\n                                placeholder=\"End Date\"\n                            />\n                        </Form.Item>\n                    </div>\n\n\n\n                </div>\n                <div className=\"col-8\">\n                    <Form.Item\n                        label=\"\"\n                        name=\"description\"\n                        rules={[{required: true, message: 'Please input Description!'}]}\n                    >\n                        <Input.TextArea placeholder=\"Description\"/>\n                    </Form.Item>\n                </div>\n            </div>\n\n            <div className={styles.uploadImage}>\n                <UploadMultipleImage\n                    description=\"Upload Product Image (Upload Limit 5 Image)\"\n                    setImageList={setImageList}\n                />\n            </div>\n\n            <div className=\"d-flex mt-3\">\n                <Form.Item\n                    label=\"\"\n                    name=\"productHasWarrenty\"\n                    rules={[{required: false, message: 'Please input Commercial!'}]}\n                >\n                    <Checkbox>Product has warrenty</Checkbox>\n                </Form.Item>\n                <Form.Item\n                    label=\"\"\n                    name=\"warrentyType\"\n                    rules={[{required: false, message: 'Please input Warrenty Type!'}]}\n                >\n                    <Select placeholder=\"Warrenty Type\">\n                        <Select.Option value=\"1\">1 Year</Select.Option>\n                        <Select.Option value=\"2\">2 Year</Select.Option>\n                        <Select.Option value=\"3\">3 Year</Select.Option>\n                        <Select.Option value=\"4\">4 Year</Select.Option>\n                    </Select>\n\n                </Form.Item>\n            </div>\n\n\n        </div>\n    );\n};\n\nexport default ProductGenral;","import {routeRules} from \"./routeRules\";\nimport ProductList from \"../container/productList\";\nimport AddProduct from \"../container/AddProduct\";\n\nexport const routesData = [\n    {\n        key: routeRules.addProduct,\n        path: routeRules.addProduct,\n        component: AddProduct,\n        auth: true,\n        exact: false\n    },\n    {\n        key: routeRules.productList,\n        path: routeRules.productList,\n        component: ProductList,\n        auth: true,\n        exact: false\n    }\n];","import React, {useState} from 'react';\nimport {Collapse, Input, Select, Form, Button, message} from 'antd';\nimport styles from './AddProduct.module.css';\nimport BreadcrumbCustom from \"../../components/breadcrum\";\nimport ProductSpecification from \"./ProductSpecification\";\nimport StockInformation from \"./StockInformation\";\nimport ProductPrice from \"./ProductPrice\";\nimport ProductGenral from \"./ProductGenral\";\nimport usePikachu from \"../../hooks/usePikachu\";\nimport shortid from 'shortid';\n\n\nconst AddProduct = (props) => {\n\n    const { productList, addProductList} = usePikachu()\n\n    const [images, setImages] = useState([])\n    const { Panel } = Collapse;\n\n    const setImageList = (img) => {\n        setImages(img)\n\n    }\n\n    const [form] = Form.useForm();\n\n    React.useEffect(() => {\n        form.setFieldsValue({\n            quantityInStock: 'Bamboo',\n        });\n    }, []);\n\n    const addProduct = (FormValue) => {\n        if (images.length < 1){\n            message.error('Please Add Atleast one Image')\n        } else {\n            FormValue['id'] = shortid.generate()\n            FormValue['images'] = images\n            addProductList(FormValue)\n            message.success('Product Added successfully')\n        }\n\n    }\n\n    return (\n        <div className={styles.addProductWrapper}>\n            <div className={styles.header}>\n                Add Product\n            </div>\n            <BreadcrumbCustom/>\n\n            <Form name=\"basic\" form={form} onFinish={addProduct}>\n                <div className={styles.collapse}>\n                    <Collapse bordered={false} defaultActiveKey={['productGenral']}>\n                        <Panel header=\"Product Genral\" key=\"productGenral\" className={styles.panel}>\n                            <ProductGenral form={form} setImageList={setImageList}/>\n                        </Panel>\n                        <Panel header=\"Product Specification\" key=\"productSpecification\" className={styles.panel}>\n                            <ProductSpecification form={form}/>\n                        </Panel>\n                        <Panel header=\"Product Price\" key=\"productPrice\" className={styles.panel}>\n                            <ProductPrice form={form}/>\n                        </Panel>\n                        <Panel header=\"Stock Information\" key=\"stockInformation\" className={styles.panel}>\n                            <StockInformation form={form}/>\n                        </Panel>\n                    </Collapse>\n                </div>\n\n                <div className=\"float-right\">\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </div>\n            </Form>\n        </div>\n    );\n};\n\nexport default AddProduct;","import React from 'react';\nimport { MenuOutlined } from '@ant-design/icons';\nimport styles from './Header.module.css';\n\nimport usePikachu from \"../../hooks/usePikachu\";\n\nconst Header = () => {\n\n    const { toggleLeftMenu } = usePikachu()\n\n    return (\n        <div className={styles.header}>\n            <span className={styles.hemburger}>\n                <MenuOutlined onClick={() => toggleLeftMenu()}/>\n            </span>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport Style from \"./LeftMenu.module.css\"\nimport usePikachu from \"../../hooks/usePikachu\";\nimport { CreditCardOutlined } from '@ant-design/icons';\nimport {routeRules} from \"../../routes/routeRules\";\nimport { withRouter } from \"react-router\";\n\n\nconst LeftMenu = (props) => {\n\n    const { isLeftMenuVissible} = usePikachu()\n\n    return (\n        <div className={`${Style.leftMenu} ${isLeftMenuVissible ? Style.openMenu : Style.CloseMenu }`}>\n            <div className={Style.menuItemHead}>\n                <span className={Style.menuItemIcon}>\n                    <CreditCardOutlined />\n                </span>\n                Manage Inventory\n            </div>\n            <div className={Style.subMenu}>\n                <span onClick={() => props.history.push(routeRules.productList)}>\n                    > Manage Product\n                </span>\n            </div>\n        </div>\n    );\n\n}\n\nexport default  withRouter(LeftMenu);","import React from 'react';\nimport Header from \"../components/header\";\nimport LeftMenu from \"../components/leftMenu\";\nimport styles from './AppLayout.module.css';\n\nconst AppLayout = (props) => {\n    return (\n        <>\n            <div className=\"d-flex\">\n                <LeftMenu isMenuOpen={true}/>\n                <div className={styles.appLayout}>\n                    <Header/>\n                    <div className={styles.pageBackground}>\n                        {props.children}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AppLayout;","import React from 'react';\nimport {Route, Redirect} from \"react-router-dom\";\nimport AppLayout from \"../layout/AppLayout\";\n\nconst AppRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={matchProps => {\n                if (localStorage.getItem('token') !== \"\"){\n                    return (\n                        <AppLayout {...matchProps}>\n                            <Component {...matchProps}/>\n                        </AppLayout>\n                    )\n                } else {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/\",\n                                state: {\n                                    from: matchProps.location\n                                }\n                            }}\n                        />\n                    )\n                }\n            }}\n        />\n    );\n};\n\nexport default AppRoute;\n","import React from 'react';\nimport Header from \"../components/header\";\n\nconst DefaultLayout = (props) => {\n    return (\n        <>\n            <Header/>\n            {props.children}\n        </>\n    );\n};\n\nexport default DefaultLayout;","import React from 'react';\nimport { Route } from \"react-router-dom\";\nimport DefaultLayout from \"../layout/DefaultLayout\";\n\nconst DefaultRoute = ({component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={matchProps => {\n                return (\n                    <DefaultLayout {...matchProps}>\n                        <Component {...matchProps}/>\n                    </DefaultLayout>\n                )\n            }}\n        />\n    );\n};\n\nexport default DefaultRoute;\n","import React from 'react';\nimport {AppProvider} from \"./context/AppContext\";\nimport {BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport {routeRules} from \"./routes/routeRules\";\nimport {routesData} from \"./routes/routesData\";\nimport AppRoute from \"./layoutRoute/AppRoute\";\nimport DefaultRoute from \"./layoutRoute/DefaultRoute\";\n\nfunction App() {\n    return (\n        <AppProvider>\n            <Router>\n                <Switch>\n                    <Route exact path='/'>\n                        <Redirect to={routeRules.login}/>\n                    </Route>\n                    {\n                        routesData.map(route => {\n                            if (route.auth){\n                                return <AppRoute {...route}/>\n                            } else {\n                                return <DefaultRoute {...route}/>\n                            }\n                        })\n                    }\n                </Switch>\n            </Router>\n        </AppProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './assets/css/main.css';\nimport 'antd/dist/antd.css';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productListWrapper\":\"ProductList_productListWrapper__1jUTi\",\"header\":\"ProductList_header__3efjA\",\"inventoryHeader\":\"ProductList_inventoryHeader__2OUhs\",\"inventoryHeaderRight\":\"ProductList_inventoryHeaderRight__1m-RV\",\"productTable\":\"ProductList_productTable__OOXXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftMenu\":\"LeftMenu_leftMenu__3XHH4\",\"openMenu\":\"LeftMenu_openMenu__35IT6\",\"CloseMenu\":\"LeftMenu_CloseMenu__2DeIM\",\"menuItemHead\":\"LeftMenu_menuItemHead__3A1KD\",\"menuItemIcon\":\"LeftMenu_menuItemIcon__Rlkq7\",\"subMenu\":\"LeftMenu_subMenu__39ExL\"};"],"sourceRoot":""}